apply plugin: 'com.android.application'

def versionMajor = 1
def versionMinor = 0
def versionTag = getTag()

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.2"

  defaultConfig {
    applicationId "cz.muni.fi.pv256.movio.uco_374524.superprojekt"
    minSdkVersion 15
    targetSdkVersion 23

    resConfigs "cs", "en"
    resConfigs "hdpi", "xhdpi", "xxhdpi", "xxxhdpi"

    versionCode versionMajor * 100 + versionMinor
    versionName "${versionMajor}.${versionMinor}.${versionTag}"
  }

  signingConfigs {
    release {
      storeFile file(RELEASE_STORE_FILE)
      storePassword RELEASE_STORE_PASSWORD
      keyAlias RELEASE_KEY_ALIAS
      keyPassword RELEASE_KEY_PASSWORD
    }
  }

  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }
  }

  productFlavors {
    primary {
      applicationId "cz.muni.fi.pv256.movio.uco_374524.superprojekt"
      buildConfigField "boolean", "LOGGING_ENABLED", "true"
    }
    secondary {
      applicationId "cz.muni.fi.pv256.movio.uco_374524.superprojekt.second"
      buildConfigField "boolean", "LOGGING_ENABLED", "false"
    }
  }

  testOptions {
    unitTests.all {
      // All the usual Gradle options.
      jvmArgs '-XX:MaxPermSize=256m'
    }
  }
}

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile 'com.android.support:appcompat-v7:23.1.1'
  compile 'com.android.support:design:23.1.1'
  compile 'com.squareup.retrofit:retrofit:2.0.0-beta2'
  compile 'com.squareup.okhttp:okhttp:2.5.0'
  compile 'com.squareup.moshi:moshi:1.0.0'
  compile 'com.squareup.okio:okio:1.6.0'
  compile 'com.github.bumptech.glide:glide:3.6.1'
  compile 'de.greenrobot:eventbus:2.4.0'
  compile 'com.tonicartos:superslim:0.4.13'
  compile 'com.github.castorflex.smoothprogressbar:library-circular:1.2.0'
  testCompile 'junit:junit:4.12'
}
/*
 * Gets the version name from the latest Git tag
 */

def getTag() {
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}